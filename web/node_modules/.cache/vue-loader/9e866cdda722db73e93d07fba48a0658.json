{"remainingRequest":"C:\\Users\\venno\\IdeaProjects\\Tarkvaratehnika1\\web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\venno\\IdeaProjects\\Tarkvaratehnika1\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\venno\\IdeaProjects\\Tarkvaratehnika1\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\venno\\IdeaProjects\\Tarkvaratehnika1\\web\\src\\views\\SaveTraining.vue?vue&type=template&id=a9a8819e&scoped=true&","dependencies":[{"path":"C:\\Users\\venno\\IdeaProjects\\Tarkvaratehnika1\\web\\src\\views\\SaveTraining.vue","mtime":1554197564944},{"path":"C:\\Users\\venno\\IdeaProjects\\Tarkvaratehnika1\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1553611641452},{"path":"C:\\Users\\venno\\IdeaProjects\\Tarkvaratehnika1\\web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1553611651277},{"path":"C:\\Users\\venno\\IdeaProjects\\Tarkvaratehnika1\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1553611641452},{"path":"C:\\Users\\venno\\IdeaProjects\\Tarkvaratehnika1\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1553611651275}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"saveTraining\" }, [\n    this.exercises.length === 0\n      ? _c(\"div\", [\n          _c(\n            \"select\",\n            {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.selectedPlan,\n                  expression: \"selectedPlan\"\n                }\n              ],\n              on: {\n                change: function($event) {\n                  var $$selectedVal = Array.prototype.filter\n                    .call($event.target.options, function(o) {\n                      return o.selected\n                    })\n                    .map(function(o) {\n                      var val = \"_value\" in o ? o._value : o.value\n                      return val\n                    })\n                  _vm.selectedPlan = $event.target.multiple\n                    ? $$selectedVal\n                    : $$selectedVal[0]\n                }\n              }\n            },\n            _vm._l(_vm.workoutPlans, function(workoutPlan) {\n              return _c(\"option\", { domProps: { value: workoutPlan } }, [\n                _vm._v(_vm._s(workoutPlan.planName))\n              ])\n            }),\n            0\n          ),\n          _c(\"br\"),\n          this.selectedPlan\n            ? _c(\n                \"select\",\n                {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.selectedWorkout,\n                      expression: \"selectedWorkout\"\n                    }\n                  ],\n                  on: {\n                    change: [\n                      function($event) {\n                        var $$selectedVal = Array.prototype.filter\n                          .call($event.target.options, function(o) {\n                            return o.selected\n                          })\n                          .map(function(o) {\n                            var val = \"_value\" in o ? o._value : o.value\n                            return val\n                          })\n                        _vm.selectedWorkout = $event.target.multiple\n                          ? $$selectedVal\n                          : $$selectedVal[0]\n                      },\n                      _vm.updateExercise\n                    ]\n                  }\n                },\n                _vm._l(this.selectedPlan.workouts, function(workout) {\n                  return _c(\"option\", { domProps: { value: workout } }, [\n                    _vm._v(_vm._s(workout.workoutName))\n                  ])\n                }),\n                0\n              )\n            : _vm._e()\n        ])\n      : _vm._e(),\n    this.selectedWorkout\n      ? _c(\n          \"form\",\n          {\n            staticClass: \"workoutClass\",\n            attrs: { id: \"add-workout\" },\n            on: {\n              submit: function($event) {\n                $event.preventDefault()\n              }\n            }\n          },\n          [\n            _c(\"table\", [\n              _vm._m(0),\n              _c(\"tr\", [_c(\"td\", [_c(\"p\", [_vm._v(_vm._s(_vm.changeDate))])])]),\n              this.index < this.selectedWorkout.planExercises.length\n                ? _c(\"div\", [\n                    _c(\"tr\", [\n                      _c(\"td\", [\n                        _c(\"label\", [\n                          _vm._v(\n                            _vm._s(\n                              this.selectedWorkout.planExercises[this.index]\n                                .exerciseName\n                            )\n                          )\n                        ])\n                      ])\n                    ]),\n                    _c(\"tr\", [\n                      _vm._m(1),\n                      _c(\"td\", [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.exercise.sets,\n                              expression: \"exercise.sets\"\n                            }\n                          ],\n                          attrs: { type: \"number\", name: \"exerciseSets\" },\n                          domProps: { value: _vm.exercise.sets },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.exercise,\n                                \"sets\",\n                                $event.target.value\n                              )\n                            }\n                          }\n                        })\n                      ])\n                    ]),\n                    _c(\"tr\", [\n                      _vm._m(2),\n                      _c(\"td\", [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.exercise.repetitions,\n                              expression: \"exercise.repetitions\"\n                            }\n                          ],\n                          attrs: {\n                            type: \"number\",\n                            name: \"exerciseRepetitions\"\n                          },\n                          domProps: { value: _vm.exercise.repetitions },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.exercise,\n                                \"repetitions\",\n                                $event.target.value\n                              )\n                            }\n                          }\n                        })\n                      ])\n                    ]),\n                    _c(\"tr\", [\n                      _vm._m(3),\n                      _c(\"td\", [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.exercise.weight,\n                              expression: \"exercise.weight\"\n                            }\n                          ],\n                          attrs: { type: \"number\", name: \"exerciseWeight\" },\n                          domProps: { value: _vm.exercise.weight },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.exercise,\n                                \"weight\",\n                                $event.target.value\n                              )\n                            }\n                          }\n                        })\n                      ])\n                    ]),\n                    _c(\"tr\", [\n                      _c(\"td\", [\n                        _c(\"input\", {\n                          staticClass: \"submit\",\n                          attrs: {\n                            type: \"submit\",\n                            name: \"addExercise\",\n                            value: \"Add\"\n                          },\n                          on: { click: _vm.addExercise }\n                        })\n                      ])\n                    ])\n                  ])\n                : _vm._e(),\n              this.exercises.length > 0\n                ? _c(\"tr\", [\n                    _c(\"td\", [\n                      _c(\"input\", {\n                        staticClass: \"submit\",\n                        attrs: {\n                          type: \"submit\",\n                          name: \"submitAll\",\n                          value: \"Submit all\"\n                        },\n                        on: { click: _vm.processForm }\n                      })\n                    ])\n                  ])\n                : _vm._e()\n            ])\n          ]\n        )\n      : _vm._e(),\n    _c(\"span\", { staticClass: \"exerciseData\" }, [\n      _c(\n        \"ol\",\n        _vm._l(_vm.exercises, function(exercise) {\n          return _c(\"li\", [\n            _c(\"span\", [\n              _vm._v(\"Name: \" + _vm._s(exercise.exerciseName) + \",\")\n            ]),\n            _c(\"span\", [_vm._v(\"sets: \" + _vm._s(exercise.sets) + \",\")]),\n            _c(\"span\", [\n              _vm._v(\"repetitions: \" + _vm._s(exercise.repetitions) + \",\")\n            ]),\n            _c(\"span\", [_vm._v(\"weight: \" + _vm._s(exercise.weight))]),\n            _c(\n              \"button\",\n              {\n                staticClass: \"remove\",\n                on: {\n                  click: function($event) {\n                    _vm.removeExercise(_vm.exercises.indexOf(exercise))\n                  }\n                }\n              },\n              [_vm._v(\"Remove\")]\n            ),\n            _c(\"br\")\n          ])\n        }),\n        0\n      )\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"tr\", [_c(\"td\", [_c(\"label\", [_vm._v(\"Date\")])])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"td\", [_c(\"label\", [_vm._v(\"Sets\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"td\", [_c(\"label\", [_vm._v(\"Repetitions\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"td\", [_c(\"label\", [_vm._v(\"Weight\")])])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}