{"remainingRequest":"C:\\Users\\venno\\IdeaProjects\\Tarkvaratehnika1\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\venno\\IdeaProjects\\Tarkvaratehnika1\\web\\src\\views\\Calendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\venno\\IdeaProjects\\Tarkvaratehnika1\\web\\src\\views\\Calendar.vue","mtime":1553945476818},{"path":"C:\\Users\\venno\\IdeaProjects\\Tarkvaratehnika1\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1553611641452},{"path":"C:\\Users\\venno\\IdeaProjects\\Tarkvaratehnika1\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":1553611641170},{"path":"C:\\Users\\venno\\IdeaProjects\\Tarkvaratehnika1\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1553611641452},{"path":"C:\\Users\\venno\\IdeaProjects\\Tarkvaratehnika1\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1553611651275}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n    CalendarView,\n    CalendarViewHeader,\n    CalendarMathMixin,\n} from \"vue-simple-calendar\"\nimport axios from \"axios\";\nimport SaveTraining from \"./SaveTraining.vue\"\nrequire(\"vue-simple-calendar/static/css/default.css\");\nrequire(\"vue-simple-calendar/static/css/holidays-us.css\");\n\nexport default {\n    name: 'app',\n    components: {\n        CalendarView,\n        CalendarViewHeader,\n        SaveTraining\n    },\n    mixins: [CalendarMathMixin],\n    data: function() {\n        return {\n            calendarDate: \"\",\n            showDate: this.thisMonth(1),\n            message: \"\",\n            startingDayOfWeek: 1,\n            disablePast: false,\n            disableFuture: false,\n            displayPeriodUom: \"month\",\n            displayPeriodCount: 1,\n            showEventTimes: true,\n            newEventTitle: \"\",\n            newEventStartDate: \"\",\n            newEventEndDate: \"\",\n            useDefaultTheme: true,\n            useHolidayTheme: true,\n            useTodayIcons: false,\n            events: [],\n            selectedWorkout: {\n                id: 0,\n                date: '0-0-0',\n                workoutName: '',\n                exercises: []\n            },\n            history: [],\n            showExercises: []\n        }\n    },\n    computed: {\n        userLocale() {\n            return this.getDefaultBrowserLocale\n        },\n        dayNames() {\n            return this.getFormattedWeekdayNames(this.userLocale, \"long\", 0)\n        },\n        themeClasses() {\n            return {\n                \"theme-default\": this.useDefaultTheme,\n                \"holiday-us-traditional\": this.useHolidayTheme,\n                \"holiday-us-official\": this.useHolidayTheme,\n            }\n        },\n    },\n    mounted() {\n        this.newEventStartDate = this.isoYearMonthDay(this.today())\n        this.newEventEndDate = this.isoYearMonthDay(this.today())\n        this.getAllData()\n    },\n    methods: {\n        thisMonth(d, h, m) {\n            const t = new Date()\n            return new Date(t.getFullYear(), t.getMonth(), d, h || 0, m || 0)\n        },\n        onClickDay(d) {\n            // SaveTraining.data().date = `${d.toLocaleDateString()}`;\n            // this.date = `${d.toLocaleDateString(this.options)}`;\n\n            this.calendarDate = `${d.toISOString().split('T')[0]}`\n            console.log(this.date);\n            console.log(`${d.toISOString().split('T')[0]}`)\n            // console.log(SaveTraining.data().date);\n            this.message = `You clicked: ${d.toLocaleDateString()}`\n        },\n        onClickEvent(e) {\n            for (var i = 0; i < this.history.length; i++) {\n                if (this.history[i].id === e.id) {\n                    this.selectedWorkout = this.history[i];\n                }\n            }\n            this.message = `You clicked: ${e.title}`\n        },\n        setShowDate(d) {\n            this.message = `Changing calendar view to ${d.toLocaleDateString()}`\n            this.showDate = d\n        },\n        onDrop(event, date) {\n            this.message = `You dropped ${event.id} on ${date.toLocaleDateString()}`\n            // Determine the delta between the old start date and the date chosen,\n            // and apply that delta to both the start and end date to move the event.\n            const eLength = this.dayDiff(event.startDate, date)\n            event.originalEvent.startDate = this.addDays(event.startDate, eLength)\n            event.originalEvent.endDate = this.addDays(event.endDate, eLength)\n        },\n        getAllData: function() {\n            console.log(this.username);\n            this.username = localStorage.username;\n            console.log(this.username);\n            axios\n                .get('http://localhost:8080/api/workouts/' + this.username + '?access_token=' + localStorage.getItem('token'))\n                .then(response => {\n                    this.history = response.data;\n                    for (var i = 0; i < this.history.length; i++) {\n                        this.events.push({\n                            startDate: this.history[i].date,\n                            endDate: this.history[i].date,\n                            title: this.history[i].workoutName,\n                            id: this.history[i].id\n                        })\n                    }\n                });\n        },\n        displayExerciseInfo: function(arg) {\n            if(this.showExercises.includes(arg)) {\n                var index = this.showExercises.indexOf(arg);\n                if (index > -1) {\n                    this.showExercises.splice(index, 1);\n                }\n            } else {\n                this.showExercises.push(arg);\n            }\n        }\n    }\n}\n",{"version":3,"sources":["Calendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"Calendar.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div id=\"calendar\">\r\n        <div class=\"calendarView\">\r\n            <calendar-view\r\n                    :events=\"events\"\r\n                    :show-date=\"showDate\"\r\n                    :time-format-options=\"{hour: 'numeric', minute:'2-digit', year:'numeric', month:'numeric', day:'numeric'}\"\r\n                    :enable-drag-drop=\"false\"\r\n                    :disable-past=\"disablePast\"\r\n                    :disable-future=\"disableFuture\"\r\n                    :show-event-times=\"showEventTimes\"\r\n                    :display-period-uom=\"displayPeriodUom\"\r\n                    :display-period-count=\"displayPeriodCount\"\r\n                    :starting-day-of-week=\"startingDayOfWeek\"\r\n                    :current-period-label=\"useTodayIcons ? 'icons' : ''\"\r\n                    @drop-on-date=\"onDrop\"\r\n                    @click-date=\"onClickDay\"\r\n                    @click-event=\"onClickEvent\"\r\n                    class=\"theme-default holiday-us-traditional holiday-us-official\">\r\n                <calendar-view-header\r\n                        slot=\"header\"\r\n                        slot-scope=\"t\"\r\n                        :header-props=\"t.headerProps\"\r\n                        @input=\"setShowDate\"/>\r\n            </calendar-view>\r\n        </div>\r\n\r\n        <div class=\"selectedWorkout\" v-if=\"this.selectedWorkout.id\">\r\n            <span>Workout Name: {{this.selectedWorkout.workoutName}} </span>\r\n            <br>\r\n            <span>Date: {{this.selectedWorkout.date}}</span>\r\n            <br>\r\n            <div v-for=\"exercise in this.selectedWorkout.exercises\" style=\"margin-left: 2ex;\" id=\"exercise\">\r\n                <span @click=\"displayExerciseInfo(exercise.exerciseName)\">Exercise: {{exercise.exerciseName}} </span>\r\n                <div v-if=\"showExercises.includes(exercise.exerciseName)\">\r\n                    <span>Sets: {{exercise.sets}} </span>\r\n                    <br>\r\n                    <span>Repetitions: {{exercise.repetitions}} </span>\r\n                    <br>\r\n                    <span v-if=\"exercise.weight !== 0\">Weight: {{exercise.weight}}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"saveTraining\" v-if=\"this.calendarDate\">\r\n            <SaveTraining :date=\"calendarDate\" />\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    import {\r\n        CalendarView,\r\n        CalendarViewHeader,\r\n        CalendarMathMixin,\r\n    } from \"vue-simple-calendar\"\r\n    import axios from \"axios\";\r\n    import SaveTraining from \"./SaveTraining.vue\"\r\n    require(\"vue-simple-calendar/static/css/default.css\");\r\n    require(\"vue-simple-calendar/static/css/holidays-us.css\");\r\n\r\n    export default {\r\n        name: 'app',\r\n        components: {\r\n            CalendarView,\r\n            CalendarViewHeader,\r\n            SaveTraining\r\n        },\r\n        mixins: [CalendarMathMixin],\r\n        data: function() {\r\n            return {\r\n                calendarDate: \"\",\r\n                showDate: this.thisMonth(1),\r\n                message: \"\",\r\n                startingDayOfWeek: 1,\r\n                disablePast: false,\r\n                disableFuture: false,\r\n                displayPeriodUom: \"month\",\r\n                displayPeriodCount: 1,\r\n                showEventTimes: true,\r\n                newEventTitle: \"\",\r\n                newEventStartDate: \"\",\r\n                newEventEndDate: \"\",\r\n                useDefaultTheme: true,\r\n                useHolidayTheme: true,\r\n                useTodayIcons: false,\r\n                events: [],\r\n                selectedWorkout: {\r\n                    id: 0,\r\n                    date: '0-0-0',\r\n                    workoutName: '',\r\n                    exercises: []\r\n                },\r\n                history: [],\r\n                showExercises: []\r\n            }\r\n        },\r\n        computed: {\r\n            userLocale() {\r\n                return this.getDefaultBrowserLocale\r\n            },\r\n            dayNames() {\r\n                return this.getFormattedWeekdayNames(this.userLocale, \"long\", 0)\r\n            },\r\n            themeClasses() {\r\n                return {\r\n                    \"theme-default\": this.useDefaultTheme,\r\n                    \"holiday-us-traditional\": this.useHolidayTheme,\r\n                    \"holiday-us-official\": this.useHolidayTheme,\r\n                }\r\n            },\r\n        },\r\n        mounted() {\r\n            this.newEventStartDate = this.isoYearMonthDay(this.today())\r\n            this.newEventEndDate = this.isoYearMonthDay(this.today())\r\n            this.getAllData()\r\n        },\r\n        methods: {\r\n            thisMonth(d, h, m) {\r\n                const t = new Date()\r\n                return new Date(t.getFullYear(), t.getMonth(), d, h || 0, m || 0)\r\n            },\r\n            onClickDay(d) {\r\n                // SaveTraining.data().date = `${d.toLocaleDateString()}`;\r\n                // this.date = `${d.toLocaleDateString(this.options)}`;\r\n\r\n                this.calendarDate = `${d.toISOString().split('T')[0]}`\r\n                console.log(this.date);\r\n                console.log(`${d.toISOString().split('T')[0]}`)\r\n                // console.log(SaveTraining.data().date);\r\n                this.message = `You clicked: ${d.toLocaleDateString()}`\r\n            },\r\n            onClickEvent(e) {\r\n                for (var i = 0; i < this.history.length; i++) {\r\n                    if (this.history[i].id === e.id) {\r\n                        this.selectedWorkout = this.history[i];\r\n                    }\r\n                }\r\n                this.message = `You clicked: ${e.title}`\r\n            },\r\n            setShowDate(d) {\r\n                this.message = `Changing calendar view to ${d.toLocaleDateString()}`\r\n                this.showDate = d\r\n            },\r\n            onDrop(event, date) {\r\n                this.message = `You dropped ${event.id} on ${date.toLocaleDateString()}`\r\n                // Determine the delta between the old start date and the date chosen,\r\n                // and apply that delta to both the start and end date to move the event.\r\n                const eLength = this.dayDiff(event.startDate, date)\r\n                event.originalEvent.startDate = this.addDays(event.startDate, eLength)\r\n                event.originalEvent.endDate = this.addDays(event.endDate, eLength)\r\n            },\r\n            getAllData: function() {\r\n                console.log(this.username);\r\n                this.username = localStorage.username;\r\n                console.log(this.username);\r\n                axios\r\n                    .get('http://localhost:8080/api/workouts/' + this.username + '?access_token=' + localStorage.getItem('token'))\r\n                    .then(response => {\r\n                        this.history = response.data;\r\n                        for (var i = 0; i < this.history.length; i++) {\r\n                            this.events.push({\r\n                                startDate: this.history[i].date,\r\n                                endDate: this.history[i].date,\r\n                                title: this.history[i].workoutName,\r\n                                id: this.history[i].id\r\n                            })\r\n                        }\r\n                    });\r\n            },\r\n            displayExerciseInfo: function(arg) {\r\n                if(this.showExercises.includes(arg)) {\r\n                    var index = this.showExercises.indexOf(arg);\r\n                    if (index > -1) {\r\n                        this.showExercises.splice(index, 1);\r\n                    }\r\n                } else {\r\n                    this.showExercises.push(arg);\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n\r\n<style scoped>\r\n    #calendar {\r\n        font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n        color: #2c3e50;\r\n        height: 67vh;\r\n        width: 90vw;\r\n        margin-left: 20px;\r\n        margin-right: 0;\r\n        margin-top: 144px;\r\n    }\r\n    .calendarView {\r\n        height: 70vh;\r\n        width: 60vw;\r\n        display: inline-block;\r\n    }\r\n    .selectedWorkout {\r\n        background: #f0f0f0;\r\n        height: 35vh;\r\n        width: 25vw;\r\n        margin-right: 50px;\r\n        overflow-y: auto;\r\n        display: inline-block;\r\n        float: right;\r\n        padding: 10px;\r\n    }\r\n    .saveTraining {\r\n        background: #f0f0f0;\r\n        height: 35vh;\r\n        width: 25vw;\r\n        overflow-y: auto;\r\n    }\r\n</style>"]}]}